"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils");exports.data={data:(new builder_1.FunctionBuilder).setName("arrayEvery").setValue("description","Check if all array elements meets the condition.").setValue("use","$arrayEvery[varname;comparator;query]").setValue("returns","Boolean"),code:async e=>{if(await e.func?.resolve_fields(e),!e.func?.inside)return utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name);if(e.func.fields.length<2)return utils_1.Utils.Warn("Invalid splits provided in:",e.func.name);let[r,i,a]=e.func.fields.map(({value:e})=>e.unescape());var n=utils_1.Utils.loadArray(e._.vars?.[r]);return n&&Array.isArray(n)?["==","!=","<=",">=","<",">"].includes(i)?{code:e.code.replace(e.func.id,n.every(e=>utils_1.Utils.condition(""+e+i+a))?.toString())}:utils_1.Utils.Warn("Invalid comparator type provided in:",e.func.name):utils_1.Utils.Warn("Invalid variable/array provided in:",e.func.name)}};