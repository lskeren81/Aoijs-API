"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils");exports.data={data:(new builder_1.FunctionBuilder).setName("drawRect").setValue("description","Draws a rect in the canvas.").setValue("use","$drawRect[x;y;width;height;radius?]").setValue("returns","Void"),code:async e=>{var s,i,t,a,u;return await e.func?.resolve_fields(e),e.func?.inside?e.func.fields.length<4?utils_1.Utils.Warn("Invalid fields provided in:",e.func.name):([s,i,t,a,u="0"]=e.func.fields.map(({value:e})=>e),utils_1.Utils.isNumber(s)&&utils_1.Utils.isNumber(i)&&utils_1.Utils.isNumber(t)&&utils_1.Utils.isNumber(a)&&utils_1.Utils.isNumber(u)?e._.Canvas?.ctx?(e._.Canvas.ctx.save(),utils_1.Utils.molde(e._.Canvas.ctx,Number(s),Number(i),Number(t),Number(a),parseInt(u)),e._.Canvas.ctx.clip(),e._.Canvas.ctx.fillRect(Number(s),Number(i),Number(t),Number(a)),e._.Canvas.ctx.restore(),e._.Canvas.ctx.save(),{code:e.code.replace(e.func.id,"")}):utils_1.Utils.Warn("Not canvas found, create one first using $createCanvas, in:",e.func.name):utils_1.Utils.Warn("Some numer is invalid in:",e.func.name)):utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name)}};