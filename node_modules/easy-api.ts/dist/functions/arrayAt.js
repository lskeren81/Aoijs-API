"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils"),util_1=require("util");exports.data={data:(new builder_1.FunctionBuilder).setName("arrayAt").setValue("description","Get an element from an array.").setValue("use","$arrayAt[varname;index]").setValue("returns","Any"),code:async e=>{var a,i;return await e.func?.resolve_fields(e),e.func?.inside?([i,a]=e.func.fields.map(({value:e})=>e.unescape()),utils_1.Utils.isNumber(a)?(i=utils_1.Utils.loadArray(e._.vars?.[i]))&&Array.isArray(i)?{code:e.code.replace(e.func.id,(0,util_1.inspect)(i.at(Number(a)-1),{depth:15}).escape())}:utils_1.Utils.Warn("Invalid variable/array provided in:",e.func.name):utils_1.Utils.Warn("Invalid index provided in:",e.func.name)):utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name)}};