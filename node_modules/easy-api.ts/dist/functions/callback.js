"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils");async function repeat(i,s){if(i)for(let a=0;a<i.length;a++)for(let l=0;l<s.length;l++)if(i[a].inside&&(i[a].inside=i[a].inside.replaceAll(`%PARAM_${l+1}%`,s[l])),i[a].total=i[a].total.replaceAll(`%PARAM_${l+1}%`,s[l]),i[a].fields?.length)for(let e=0;e<i[a].fields.length;e++)i[a].fields[e].value=i[a].fields[e].value.replaceAll(`%PARAM_${l+1}%`,s[l]),i[a].fields[e].overs&&await repeat(i[a].fields[e].overs,s)}exports.data={data:(new builder_1.FunctionBuilder).setName("callback").setValue("description","Execute a callback using its id and providing custom parameters").setValue("use","$callback[id;...params?]").setValue("returns","Void"),code:async e=>{if(await e.func?.resolve_fields(e),!e.func?.inside)return utils_1.Utils.Warn("Invalid inside provided in:",e.func?.total);let[l,...a]=e.func.fields?.map(e=>e.value.unescape());var i=e._.callbacks?.[l];return i?(i=i.value.replace(/%PARAM_(\d+)%/g,(e,l)=>a[Number(l)-1]),i=await e.interpreter.parse(i,e.req,e.res,e),e.break=!!i?.break,e._=i?._||e._,{code:e.code.replace(e.func.id,i?.code||"")}):utils_1.Utils.Warn("Invalid callback name provided in:",e.func.name)}};