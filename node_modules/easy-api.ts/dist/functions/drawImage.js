"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils");exports.data={data:(new builder_1.FunctionBuilder).setName("drawImage").setValue("description","Draws an image in the canvas.").setValue("use","$drawImage[id;x;y;width;height;radius?]").setValue("returns","Void"),code:async e=>{var s,i,a,t,n,u;return await e.func?.resolve_fields(e),e.func?.inside?e.func.fields.length<5?utils_1.Utils.Warn("Invalid fields provided in:",e.func.name):([u,s,i,a,t,n="0"]=e.func.fields.map(({value:e})=>e),(u=e._.Images?.[u])?utils_1.Utils.isNumber(s)&&utils_1.Utils.isNumber(i)&&utils_1.Utils.isNumber(a)&&utils_1.Utils.isNumber(t)&&utils_1.Utils.isNumber(n)?e._.Canvas?.ctx?(e._.Canvas.ctx.save(),utils_1.Utils.molde(e._.Canvas.ctx,Number(s),Number(i),Number(a),Number(t),parseInt(n)),e._.Canvas.ctx.clip(),e._.Canvas.ctx.drawImage(u,Number(s),Number(i),Number(a),Number(t)),e._.Canvas.ctx.restore(),e._.Canvas.ctx.save(),{code:e.code.replace(e.func.id,"")}):utils_1.Utils.Warn("Not canvas found, create one first using $createCanvas, in:",e.func.name):utils_1.Utils.Warn("Some numer is invalid in:",e.func.name):utils_1.Utils.Warn("Invalid image ID provided in:",e.func.name)):utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name)}};