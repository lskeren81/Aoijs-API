"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const tslib_1=require("tslib"),builder_1=require("../classes/builder"),utils_1=require("../classes/utils"),promises_1=require("fs/promises"),canvas_1=tslib_1.__importDefault(require("@napi-rs/canvas")),axios_1=tslib_1.__importDefault(require("axios"));exports.data={data:(new builder_1.FunctionBuilder).setName("loadImage").setValue("description","Load a new image and save it as an ID.").setValue("use","$loadImage[id;type(path|url);body]").setValue("returns","Void"),code:async e=>{if(await e.func?.resolve_fields(e),!e.func?.inside)return utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name);if(e.func.fields.length<3)return utils_1.Utils.Warn("Invalid fields provided in:",e.func.name);let[a,i,s]=e.func.fields.map(({value:e})=>e);if(!["path","url","link"].some(e=>e===i.toLowerCase()))return utils_1.Utils.Warn("Invalid type provided in:",e.func.name);var t=new canvas_1.default.Image;let r=!0;if(e._.Images||(e._.Images={}),"path"===i.toLowerCase()){var l=await(0,promises_1.readFile)(s).catch(e=>null);if(!l)return utils_1.Utils.Warn("Invalid image path provided in:",e.func.name);t.src=l}else"url"!==i.toLowerCase()&&"link"!==i.toLowerCase()||((l=await axios_1.default.get(s.unescape().replace(".webp",".png"),{responseType:"arraybuffer"}).catch(e=>null))&&!l.headers["content-type"].startsWith("image")||!(l=l&&await l.data)?r=!1:t.src=l);return e._.Images[a]=r?t:null,{code:e.code.replace(e.func.id,"")}}};