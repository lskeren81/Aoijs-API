"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils");exports.data={data:(new builder_1.FunctionBuilder).setName("arrayRemove").setValue("description","Removes a array element and, optionally, returns it.").setValue("use","$arrayRemove[varname;index;return?]").setValue("returns","Any"),code:async e=>{var i,r,a;return await e.func?.resolve_fields(e),e.func?.inside?e.func.fields.length<2?utils_1.Utils.Warn("Invalid splits provided in:",e.func.name):([a,i,r=!1]=e.func.fields.map(({value:e})=>e),(a=utils_1.Utils.loadArray(e._.vars?.[a.unescape()]))&&Array.isArray(a)?utils_1.Utils.isNumber(i)?(a=a.splice(Number(i)-1,1)[0],{code:e.code.replace(e.func.id,r?a.toString():"")}):utils_1.Utils.Warn("Invalid index provided in:",e.func.name):utils_1.Utils.Warn("Invalid variable/array provided in:",e.func.name)):utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name)}};