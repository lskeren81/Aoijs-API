"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils");exports.data={data:(new builder_1.FunctionBuilder).setName("addEffect").setValue("description","Add an effect to the canvas context.").setValue("use","$addEffect[name;howmany]").setValue("returns","Void"),code:async e=>{if(await e.func?.resolve_fields(e),!e.func?.inside)return utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name);if(!e._.Canvas?.ctx)return utils_1.Utils.Warn("Not canvas found, create one first using $createCanvas, in:",e.func.name);let[a,n]=e.func.fields.map(({value:e})=>e);return a&&n?["blur","brightness","contrast","grayscale","invert","saturate","sepia"].some(e=>e===a.unescape())?utils_1.Utils.isNumber(n)?(e._.Canvas.ctx.filter=`${a.unescape()}(${n}${"blur"===a.unescape()?"px":"%"})`,{code:e.code.replace(e.func?.id,"")}):utils_1.Utils.Warn("Invalid number provided in:",e.func.name):utils_1.Utils.Warn("Invalid type provided in:",e.func.name):utils_1.Utils.Warn("Invalid fields provided.",e.func.name)}};