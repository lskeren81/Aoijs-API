"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const tslib_1=require("tslib"),builder_1=require("../classes/builder"),utils_1=require("../classes/utils"),_=tslib_1.__importStar(require("lodash"));exports.data={data:(new builder_1.FunctionBuilder).setName("arrayFindIndex").setValue("description","Finds a text into a array variable, if the text is found, returns its index, otherwise returns 0.").setValue("use","$arrayFindIndex[varname;query]").setValue("returns","Number"),code:async e=>{if(await e.func?.resolve_fields(e),!e.func?.inside)return utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name);if(e.func.fields.length<2)return utils_1.Utils.Warn("Invalid splits provided in:",e.func.name);let[i,r]=e.func.fields.map(({value:e})=>e);var s=e._.vars?.[i.unescape()];return s&&Array.isArray(s)?(s=_.findIndex(s,e=>_.isEqual(utils_1.Utils.parse(r.unescape()),e)),{code:e.code.replace(e.func.id,(s+1).toString()||"0")}):utils_1.Utils.Warn("Invalid variable/array provided in:",e.func.name)}};