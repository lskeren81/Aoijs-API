"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils");exports.data={data:(new builder_1.FunctionBuilder).setName("arrayIncludes").setValue("description","Returns whether an array includes an element or not.").setValue("use","$arrayIncludes[varname;...querys]").setValue("returns","String"),code:async e=>{if(await e.func?.resolve_fields(e),!e.func?.inside)return utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name);if(e.func.fields.length<2)return utils_1.Utils.Warn("Invalid splits provided in:",e.func.name);var[r,...i]=e.func.fields.map(({value:e})=>e);let a=utils_1.Utils.loadArray(e._.vars?.[r.unescape()]),n=!1;if(!a||!Array.isArray(a))return utils_1.Utils.Warn("Invalid variable/array provided in:",e.func.name);for(const s of i)a.includes(s)&&(n=!0);return{code:e.code.replace(e.func.id,n?.toString())}}};