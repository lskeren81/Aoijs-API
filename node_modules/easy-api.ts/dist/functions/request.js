"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const tslib_1=require("tslib"),builder_1=require("../classes/builder"),utils_1=require("../classes/utils"),axios_1=tslib_1.__importDefault(require("axios"));exports.data={data:(new builder_1.FunctionBuilder).setName("request").setValue("description","Make a http request.").setValue("use","$request[link;config?;...headers?]").setValue("returns","Void"),code:async e=>{if(await e.func?.resolve_fields(e),!e.func?.inside)return utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name);var[t,i,...a]=e.func.fields.map(({value:e})=>e),s={url:t.unescape()};const r=utils_1.Utils.loadObject(i);if(i){if(!r)return utils_1.Utils.Warn("Invalid JSON configuration provided in:",e.func.name);r.method&&(s.method=r.method),r.data&&(s.data=r.data)}if(a.length){s.headers||(s.headers={});for(const u of a){var l=u?.split(":")?.[0],d=u?.split(":")?.[1];l&&d?s.headers[l]=d:utils_1.Utils.Warn("Invalid header provided in:",e.func.name)}}return t=await(0,axios_1.default)(s).catch(e=>(console.log(r,e),r?.logError&&console.log(e),null)),e._.request_data=t?.data,{code:e.code.replace(e.func.id,"")}}};