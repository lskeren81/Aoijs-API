"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils"),util_1=require("util");exports.data={data:(new builder_1.FunctionBuilder).setName("arraySlice").setValue("description","Returns a slice from an array.").setValue("use","$arraySlice[varname;start;end?]").setValue("returns","ArrayLike"),code:async e=>{var i,r,a;return await e.func?.resolve_fields(e),e.func?.inside?e.func.fields.length<2?utils_1.Utils.Warn("Invalid fields provided in:",e.func.name):([a,i,r]=e.func.fields.map(({value:e})=>e.unescape()),(a=utils_1.Utils.loadArray(e._.vars?.[a]))&&Array.isArray(a)?!utils_1.Utils.isNumber(i)||r&&!utils_1.Utils.isNumber(r)?utils_1.Utils.Warn("Invalid index provided in:",e.func.name):{code:e.code.replace(e.func.id,(0,util_1.inspect)(a.slice(Number(i)-1,r?Number(r):void 0),{depth:15}).escape())}:utils_1.Utils.Warn("Invalid variable/array provided in:",e.func.name)):utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name)}};