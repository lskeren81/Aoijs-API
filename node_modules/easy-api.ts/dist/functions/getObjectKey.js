"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const tslib_1=require("tslib"),builder_1=require("../classes/builder"),utils_1=require("../classes/utils"),util_1=require("util"),lodash_1=tslib_1.__importDefault(require("lodash"));exports.data={data:(new builder_1.FunctionBuilder).setName("getObjectKey").setValue("description","Get a key value from a object in a variable.").setValue("use","$getObjectKey[varname;key]").setValue("returns","Any"),code:async e=>{var a,t;return await e.func?.resolve_fields(e),e.func?.inside?([t,a]=e.func.fields.map(({value:e})=>e.unescape()),t&&a?(t=e._.vars?.[t])?Array.isArray(t)||"object"!=typeof t?utils_1.Utils.Warn("Invalid object variable provided, create one using $var. Error at:",e.func.name):(t=lodash_1.default.get(t,a),t="$default"===a?.toLowerCase()?JSON.stringify(t,null,2):(0,util_1.inspect)(t),{code:e.code.replace(e.func.id,t?.escape()||"undefined")}):utils_1.Utils.Warn("No object created found. Use $var first. Error at:",e.func.name):utils_1.Utils.Warn("Invalid fields in:",e.func.name)):utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name)}};