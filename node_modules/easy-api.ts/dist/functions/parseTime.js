"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const tslib_1=require("tslib"),builder_1=require("../classes/builder"),utils_1=require("../classes/utils"),ms_1=tslib_1.__importDefault(require("ms"));exports.data={data:(new builder_1.FunctionBuilder).setName("parseTime").setValue("description","Parse the provided time, if type is number it will return string.").setValue("use","$parseTime[miliseconds/string;long(true/false)?]").setValue("returns","String"),code:async e=>{var i,s;return await e.func?.resolve_fields(e),e.func?.inside?([i,s="true"]=e.func.fields.map(({value:e})=>e),s=utils_1.Utils.isNumber(e.func.inside)?(0,ms_1.default)(Number(e.func.inside),{long:utils_1.Utils.booleanify(s)}):(0,ms_1.default)(e.func.inside),{code:e.code.replace(e.func.id,s?.toString()||"undefined")}):utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name)}};