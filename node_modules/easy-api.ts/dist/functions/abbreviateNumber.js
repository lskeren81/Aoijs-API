"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../classes/builder"),utils_1=require("../classes/utils");exports.data={data:(new builder_1.FunctionBuilder).setName("abbreviateNumber").setValue("description","Abbreviates the provided number.").setValue("use","$abbreviateNumber[number;decimals?]").setValue("returns","String"),code:async e=>{var i,s,r,t;return await e.func?.resolve_fields(e),e.func?.inside?([t,i=2]=e.func.fields.map(({value:e})=>e),t?"string"!=typeof i?utils_1.Utils.Warn("Invalid decimals provided:",e.func?.name):(0===(s=Math.floor(Math.log10(Math.abs(Number(t)||1))/3))||(r=utils_1.symbols[s-1],t=(Number(t)/Math.pow(10,3*s)).toFixed(Number(i))+r),{code:e.code.replace(e.func?.id,t)}):utils_1.Utils.Warn("Missing number in:",e.func?.name)):utils_1.Utils.Warn("Invalid inside provided in:",e.func?.name)}};